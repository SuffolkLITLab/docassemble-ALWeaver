comment: |
  Changes made in this file to merge it into assembly_line.yml (5/2021):
  1. Removed upload_template and metadata blocks.
  2. Changed fields to fields_raw and signature_fields to signature_fields_test to avoid name conflicts with the Weaver's main code.  
  3. Replaced two "mandatory:true" with "continue button field: field_list_display" and field "pdf_check_display".
  4. Added a customized Continue button and an Exit button.
---
modules:
 - .interview_generator
---
objects:
  - placeholder_signature: DAStaticFile.using(filename='placeholder_signature.png')
---
images:
  stop_sign: stop_sign.png  
  green_light: green_light.png
---
code: |
  try:
    checkbox_fields = [field[0] for field in all_fields if len(field) > 4 and field[4] == '/Btn']
    signature_fields_test = [field[0] for field in all_fields if len(field) >4 and field[4] == '/Sig']
    possible_base = get_person_variables(all_fields, custom_only=True)
    possible_custom = [field[0] for field in all_fields
        if any([field[0].startswith(base) for base in possible_base])]
  except ParsingException as ex:
    parsing_ex = ex
    force_ask('parsing_exception')
---
event: empty_pdf
question: You uploaded an empty PDF
subquestion: |
  The PDF you uploaded (${ template_upload[0].filename }) does not have any 
  fillable fields. To make a new interview with the Weaver, we need to have a 
  document that has fillable fields.
  
  If you saved a DOCX file as a PDF, you will need to add fillable fields in a 
  tool like [Adobe Acrobat](https://acrobat.adobe.com). 
  For more info, see the [documentation](https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/pdfs).

  If you uploaded a form that can only be opened in Adobe Acrobat (a LiveCycle
  or XFA form), you may need to flatten it first. You can flatten an XFA form
  using [iText PDF's free 
  tool](https://itextpdf.com/en/demos/flatten-dynamic-xfa-pdf-free-online).
buttons:
  - Restart: restart
---
event: non_descriptive_field_name
question: Some of the fields in your PDF are not descriptive
subquestion: |
  There are fields that can't be turned into descriptive variable names in the given PDF. You should make sure all field names abide by the rules in the [documentation](https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/pdfs).
  
  The fields that have issues are:

  % for bad_field in bad_fields:
    * ${ bad_field }
  % endfor

buttons:
  - Restart: restart
---
event: parsing_exception
question: ${ parsing_ex.main_issue }
subquestion: |
  ${ parsing_ex.description }

  % if parsing_ex.url is not None:
  Check out the [documentation](${ parsing_ex.url }) to learn more.
  % endif
  
buttons:
  - Restart: restart
---
code: |
  warnings_temp = set()
  for field in all_fields:
    if ' ' in field[0]:
      warnings_temp.add('space')
    if field[4] not in ['/Sig','/Btn','/Tx']:
      warnings_temp.add('not handled')
  warnings = warnings_temp
  del warnings_temp
---
question: |
  % if len(warnings) > 0:
  Correct warnings in field labels
  % else:
  Check for expected fields
  % endif
subquestion: |
  The table below shows all of the fields present in the PDF.

  Read through it to make sure that everything is as you expect it to be.

  Name (bold if {reserved}) | Type | {Internal DA name} | Max length
  -----------|------------|-------------------|-----------
  % for field in all_fields:
  ${":exclamation-triangle: " if ' ' in field[0] else ''} ${":exclamation-circle: " if len(remove_multiple_appearance_indicator(varname(field[0]))) == 0 else ''} ${'**' + str(field[0]) + '**' if is_reserved_label(field[0]) or field[0] in possible_custom else field[0]} ${ ':question:' if field[0] in possible_custom else ''} | ${ pdf_field_type_str(field) } (${field[4]}) | ${map_raw_to_final_display(field[0]) if not (map_raw_to_final_display(field[0]) == field[0]) else ''} | ${ get_character_limit(field) if get_character_limit(field) else 'n/a' }
  % endfor

  % if len(signature_fields_test) > 0:
  The following are signature fields: 
  
  % for sig in signature_fields_test:
  * ${ sig }
  % endfor
  % endif  

  % if len(checkbox_fields) > 0:
  The following are checkbox fields: 
  
  % for chk in checkbox_fields:
  * ${ chk }
  % endfor
  % endif
  
  % if 'space' in warnings:
  :exclamation-triangle: Indicates that the field name has a space in it.
  Replace any spaces with underscores in the PDF field name before continuing.
  % endif
  
  % if 'not handled' in warnings:
  :skull-crossbones: Indicates it's a field type that our interview generator
  does not currently handle. 
  If you can, make the field into a checkbox, text input, 
  or digital signature field.
  % endif
  
  % if len(possible_custom) > 0:
  :question: Indicates that we think this field could be handled by 
  questions in our question library, so you don't have to write your own questions for it! You can choose whether to use our default questions later.
  % endif
  
fields:
  - Are all fields that you expected in the table above?: all_fields_present
    datatype: yesnoradio
    required: True
    validate: |
      lambda y: True if y else validation_error("Double check your PDF to make sure you <a href=\"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/pdfs#add-labels-and-fields\">created the field correctly</a> for details!")
  - Are there any unexpected fields in the table?: unexpected_fields
    datatype: yesnoradio
    required: True
    validate: |
      lambda y: True if not y else validation_error("You should <a href=\"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/pdfs#add-labels-and-fields\">remove fields</a> that you won't be asking for or showing in the form")
  - note: |
      **Bold** names means that this field will be asked by a built-in question
      from the AL Question Library by default. If you expect it to be bold, 
      check the field's spelling.
  - Are all fields you expected to be {reserved} bolded?: fields_are_reserved
    datatype: yesnoradio
    required: True
    validate: |
      lambda y: True if y else validation_error("Make sure your <a href=\"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/label_variables\">labels</a> are correct")
    help: |
      "More of the :question: fields might be reserved than you expect: that's okay! You'll get to chose which ones are actually reserved later"
  - Are you okay with fixing the shown warnings yourself?: will_handle_errors
    datatype: yesnoradio
    required: True
    validate: |
      lambda y: True if y else validation_error("You should <a href=\"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/pdfs#add-labels-and-fields\">edit your PDF</a> to address these warnings")
    show if:
      code: |
        len(warnings) > 0
continue button field: field_list_display
help:
  label: Debug Info
  content: |
    % for field in all_fields:
    * ${field}
    % endfor
terms:
  - reserved: |
      Means there is a built-in question for this field.
  - Internal DA name: |
      Means that the variable name will be changed for Docassemble. 
      We change names that have built-in questions, as well as those starting
      with the name of a person/group of people, which we turn into "attributes" of that person.
---
code: |
  signatures = [{field: placeholder_signature} for field in signature_fields_test]
  checkboxes = [{field: 'Yes'} for field in checkbox_fields]
  other_fields = [{field[0]: map_raw_to_final_display(field[0])} for field in all_fields if not field[0] in signatures and not field[0] in checkbox_fields]
  pdf_fields = other_fields + checkboxes + signatures
---
objects:
  - quality_check_overlay: DAStaticFile.using(filename='quality_check_overlay.pdf')
---
id: debug filled in PDF
question: |
  Here is the filled-in PDF
subquestion: |
  The fields are filled in with the name that we'll use in the YAML file.
  
  All signature fields should be filled in with this image: ${placeholder_signature}

  ${ pdf_concatenate(overlay_pdf(my_pdf, quality_check_overlay.path()), filename="do_not_use.pdf") }
  
fields:
  - Are all the checkboxes checked?: all_checkboxes_checked
    datatype: yesnoradio
    required: True
    validate: |
      lambda y: True if y else validation_error("Check the field's 'export' value. It should be set to 'Yes'.")
  - Is any of the text unusually sized?: unusual_size_text
    datatype: yesnoradio
    required: True
    validate: |
      lambda y: True if not y else validation_error("Check the font sizes of those fields, and if the field is set to allow multiple lines")
  - Are all signature fields filled in with the above image?: signature_filled_in
    datatype: yesnoradio
    required: True
    validate: |
      lambda y: True if y else validation_error("Ensure that these are <a href=\"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/pdfs#add-labels-and-fields\">properly set</a> to be signature fields.")
  - note: |
      <span class="icon">[FILE stop_sign, 5%]</span> **If your job is only to label the form, do not download the preview form above**, its sole purpose is to help you catch any errors. Your form has passed the test, [pass your PDF file](https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/getting_started#trello-boards) to the next person for interview building.
  - note: |
      <span class="icon">[FILE green_light, 5%]</span> **If your job is to build the interview**, press the **Continue** button below to build your draft interview.
continue button field: pdf_check_display
---
attachment:
  variable name: my_pdf
  pdf template file:
    code: |
      template_upload
  code: |
    pdf_fields
---
code: |
  from pdfminer.pdfparser import PDFSyntaxError
  from PyPDF2.utils import PdfReadError

  try:
    pdf_concatenate(template_upload)
  except PDFSyntaxError:
    # Handle PDF read error
    force_ask('exit_invalid_file')
  except PdfReadError:
    force_ask('exit_xref_table')
  except:
    pass # Continue on to safer checks with get_pdf_fields
  validate_pdf = True
---
event: exit_xref_table
question: |
  This PDF is not valid
subquestion: |
  There was a problem reading this PDF.
  
  Sometimes you can fix this problem by using 
  [documate.org/pdf](https://www.documate.org/pdf) or by using 
  [qpdf](http://qpdf.sourceforge.net/).
  
  [Read 
  more](https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/pdfs#corrupted-or-locked-pdfs).
buttons:
  - Restart: restart